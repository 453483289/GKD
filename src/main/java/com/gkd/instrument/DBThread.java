package com.gkd.instrument;

import java.io.File;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;

import org.apache.log4j.Logger;
import org.h2.tools.DeleteDbFiles;
import org.hibernate.Session;
import org.hibernate.Transaction;

import com.gkd.hibernate.HibernateUtil;
import com.gkd.instrument.callgraph.JmpData;

public class DBThread implements Runnable {
	Connection conn;
	Statement stat;
	PreparedStatement pstmt = null;
	private static Session session = HibernateUtil.openSession();
	public static Logger logger = Logger.getLogger(JmpSocketServer.class);

	@Override
	public void run() {
		try {
			DeleteDbFiles.execute(new File(".").getAbsolutePath(), "jmpDB", true);
			//			Class.forName("org.h2.Driver");
			//			conn = DriverManager.getConnection("jdbc:h2:" + new File(".").getAbsolutePath() + "/jmpDB");
			//			stat = conn.createStatement();
			//			stat.execute("create table table1(jmpDataId integer generated by default as identity, cs bigint not null, date timestamp, name varchar(255))");
			int count = 0;
			while (true) {
				Transaction tx = session.beginTransaction();
				//				Iterator<JmpData> iterator = JmpSocketServer.jmpDataVector.iterator();
				for (JmpData jmpData : JmpSocketServer.jmpDataVector) {
					//				while (iterator.hasNext()) {
					//					JmpData jmpData = iterator.next();
					session.save(jmpData);
					//					iterator.remove();
					JmpSocketServer.jmpDataVector.remove(jmpData);
					count++;
					if (count % 100000 == 0) {
						logger.info("writted to db = " + count + ", " + JmpSocketServer.jmpDataVector.size());
					}
				}
				tx.commit();
				Thread.sleep(100);
			}
		} catch (Exception e) {
			e.printStackTrace();
		}
	}
}
